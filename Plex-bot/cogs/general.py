import os
import sys

import discord
from discord.ext import commands
from discord.ext.commands.converter import MemberConverter


class General:
	def __init__(self, bot):
		self.bot = bot

	@commands.command(name="ping",brief="Ping pong")
	async def ping(self):
		await self.bot.say("Pong!")

	@commands.group(name="faq", brief="Frequently Asked Questions", pass_context=True)
	async def frequently_asked_questions(self, context):
		if context.invoked_subcommand is None:
			embed = discord.Embed(title="Frequently Asked Questions")
			embed.add_field(name="Want to know about the requests system?", value="Just execute this command with with `requests` after it.", inline=False)
			await self.bot.say(embed=embed)
		pass

	@frequently_asked_questions.command()
	async def requests(self):
		embed=discord.Embed(title="Plex Media Request System FAQ", color=0xdc1111)
		embed.add_field(name="1. Where can I find it?", value="It's located at: https://home.samip.fi/pmrs/", inline=False)
		embed.add_field(name="2. How do I log-on?", value="You login with your plex.tv credentials.\nThe admin wont see it as it's securely checked against plex.tv API.", inline=False)
		embed.set_footer(text="Generated by samip5's code.")
		await self.bot.say(embed=embed)

	@commands.group(name='dm-faq', pass_context=True)
	async def direct_message_frequently_asked_questions(self, ctx):
		if ctx.invoked_subcommand is None:
			message = "This is not supposed to be called without anything after it. Please fix your command and try again."
			await self.bot.say(message)
		pass

	@direct_message_frequently_asked_questions.command(pass_context=True)
	async def requests(self, ctx, member: discord.Member):
		footer = f"Called by {ctx.message.author}"
		embed = discord.Embed(title="Plex Media Request System FAQ", color=0xdc1111)
		embed.add_field(name="1. Where can I find it?", value="It's located at: https://home.samip.fi/pmrs/", inline=False)
		embed.add_field(name="2. How do I log-on?", value="You login with your plex.tv credentials.\nThe admin wont see it as it's securely checked against plex.tv API.", inline=False)
		embed.set_footer(text=footer)
		await self.bot.send_message(member, embed=embed)


def setup(bot):
	bot.add_cog(General(bot))
